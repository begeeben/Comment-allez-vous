<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title></title>

    <script src="Scripts/jquery-1.6.2.js" type="text/javascript"></script>
    <script src="Scripts/mustache.js" type="text/javascript"></script>
    <link href="Scripts/PokerStyle.css" rel="stylesheet" type="text/css" />
    
    <script type="text/javascript">
    
    
var PlayerCount = 2;

        function Poker(id, value) {
            this.ID = id;
            this.Value = value;
            this.Suit = "";
            this.PlayerNo = -1;
            this.PlayerID = "";
        };
    
        function GetRandom(min, max) {
            return Math.floor(Math.random() * (max - min + 1) + min);
        }

        $(document).ready(function() {
            $("#btnStart").click(function() {

                //Create
                var source = new Array();
                for (var num = 1; num <= 13; num++) {
                    for (var rp = 1; rp <= PlayerCount; rp++) {
                        source.splice(source.length, 0, new Poker("poker" + num + "_" + rp, num));
                    }
                }
                source.splice(source.length, 0, new Poker("poker" + 0 + "_" + 0, 0));

                //Wash
                var deck = new Array();
                var playerNo = 0;
                while (source.length > 0) {
                    var index = GetRandom(0, source.length - 1);

                    var pickCard = source.splice(index, 1)[0];

                    pickCard.PlayerNo = parseInt(playerNo % PlayerCount);
                    playerNo++;

                    deck.splice(deck.length, 0, pickCard);
                }

                var template = $('#PokerTemplate').html();
                var html = Mustache.to_html(template, { 'Deck': deck }).replace(/^\s*/mg, '');

                $("#Table").append(html);

                var $moveTarget = null;

                $(".Poker")
                .mouseenter(function() {
                    $(this).animate({
                        top: '-=40',
                        left: '-=50',
                        width: '+=80',
                        height: '+=100',
                        'z-index': '+=1'
                    }, 50);
                })
                .mouseleave(function() {
                    $(this).animate({
                        top: '+=40',
                        left: '+=50',
                        width: '-=80',
                        height: '-=100',
                        'z-index': '-=1'
                    }, 50);
                })
                .mousedown(function() {
                    $moveTarget = $(this);
                    $("#Deck").animate({ left: 0 }, 10000);
                });

                $("#Table").mousemove(function(event) {
                    if ($moveTarget != null) {
                        $moveTarget.css("top", event.pageY - (parseInt($moveTarget.css("height")) / 2)).css("left", event.pageX - (parseInt($moveTarget.css("width")) / 2));
                    }
                }).mouseup(function() {
                    $moveTarget = null;
                });

                var $Deck = $("#Deck");
                $("#Table .Poker").css("top", $Deck.css("top")).css("left", $Deck.css("left")).show();

                var $Table = $("#Table");
                var tmpTop = $Table.offset().top;
                var tmpLeft = $Table.offset().left;

                var delayTime = 0;
                var useTime = 100;
                for (var index in deck) {
                    var playerNo = $("#" + deck[index].ID).attr("PlayerNo");

                    switch (playerNo) {
                        case "0":
                            tmpTop = $Table.offset().top;
                            break;
                        case "1":
                            tmpTop = $Table.offset().top + 390;
                            break;
                    }

                    $("#" + deck[index].ID).delay(delayTime).animate({
                        top: tmpTop,
                        left: tmpLeft
                    }, useTime);

                    delayTime += useTime;
                    if (playerNo == PlayerCount - 1) {
                        tmpLeft += parseInt($("#" + deck[index].ID).css("width")) + 5;
                    }
                }
            });
        });
    </script>
</head>
<body>    
    <input id="btnStart" type="button" value="Start" />
    <div id="Table">        
        <div id="Deck">
        </div>
    </div>
    <div id="PokerTemplate">
        {{#Deck}}
        <div class="Poker" id="{{ID}}" PlayerNo="{{PlayerNo}}">
            <div>ID : {{ID}}</div>
            <div>Value : {{Value}}</div>
            <div>Player No : {{PlayerNo}}</div>
        </div>
        {{/Deck}}
    </div>
</body>
</html>
